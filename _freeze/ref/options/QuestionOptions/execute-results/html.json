{
  "hash": "29718c219935ff5b1fd4d36f036ba989",
  "result": {
    "markdown": "---\ntitle: \"`QuestionOptions`\"\nsubtitle: \"Change Question's behaviour\"\ndescription: \"A class of options that can be applied to a [Question](/ref/structure/Question.qmd) object. Main possibilities include making question required, setting random answer order, giving space for comments and adding a \\\"None\\\" answer. All currently available options can be found below.\"\naliases: \n  - ../QuestionOptions.html\ncategories:\n  - \"`velesresearch`\"\n  - \"`velesresearch.options`\"\n---\n\n# Modules\n\n`velesresearch`\n\n`velesresearch.options`\n\n# Usage\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nQuestionOptions(\n    required=False,\n    answers_order=\"none\",\n    inherit_answers=None,\n    comment=False,\n    comment_text=\"Other\",\n    comment_placeholder=\"\",\n    visible=True,\n    other=False,\n    other_text=\"Other\",\n    other_placeholder=\"\",\n    none=False,\n    none_text=\"None\",\n    clear_button=False,\n)\n```\n:::\n\n\n# Arguments\n\n::: arg_name\nrequired\n:::\n::: arg_desc\n`bool`; make answer mandatory. Defaults to `False`.\n:::\n\n::: arg_name\nanswers_order\n:::\n::: arg_desc\n`str`; in what order should the answers be displayed. Possible values are `\"none\"` (default; doesn't change the order), `\"random\"`, `\"asc\"` (ascending), `\"desc\"` (descending).\n:::\n\n::: arg_name\ninherit_answers\n:::\n::: arg_desc\n`str`; if specified, the question inherits answers from another question. Can be set to inherit selected answers only (see `inherit_answers_mode` argument). Accepts question name.\n:::\n\n::: arg_name\ninherit_answers_mode\n:::\n::: arg_desc\n`str`; changes mode of answers' inheritance. Works only if `inherit_answers=True`. Possible values are `\"all\"` (inherits all answers), `\"selected\"` (inherits only selected answers) and `\"unselected\"` (inherits only unselected answers).\n:::\n\n::: arg_name\ncomment\n:::\n::: arg_desc\n`bool`; if `True`, a textbox for a comment appears under the question.\n:::\n\n::: arg_name\ncomment_text\n:::\n::: arg_desc\n`str`; text over the comment textbox. Works only if `comment=True`.\n:::\n\n::: arg_name\ncomment_placeholder\n:::\n::: arg_desc\n`str`; placeholder in the comment textbox. Works only if `comment=True`.\n:::\n\n::: arg_name\nvisible\n:::\n::: arg_desc\n`bool`; should the question be visible? Useful for testing.\n:::\n\n::: arg_name\nother\n:::\n::: arg_desc\n`bool`; add \"Other\" option.\n:::\n\n::: arg_name\nother_text\n:::\n::: arg_desc\n`str`; text over the other textbox. Works only if `other=True`.\n:::\n\n::: arg_name\nother_placeholder\n:::\n::: arg_desc\n`str`; placeholder in the other textbox. Works only if `other=True`.\n:::\n\n::: arg_name\nnone\n:::\n::: arg_desc\n`bool`; add \"None\" option.\n:::\n\n::: arg_name\nnone_text\n:::\n::: arg_desc\n`str`; text for the \"None\" option. Works only if `none=True`.\n:::\n\n::: arg_name\nclear_button\n:::\n::: arg_desc\n`bool`; should a clear button be visible?\n:::\n\n# Value\n\nAn object of class `QuestionOptions`.\n\n# Examples\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom velesresearch import radio, QuestionOptions\n\nradio(\n    \"Favourite drink\",\n    \"Tea\",\n    \"Coffee\",\n    \"Water\",\n    options=QuestionOptions(other=True, none=True, required=True),\n)\n```\n:::\n\n\n",
    "supporting": [
      "QuestionOptions_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}