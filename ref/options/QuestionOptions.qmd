---
title: "`QuestionOptions`"
subtitle: "Change Question's behaviour"
description: "A class of options that can be applied to a [Question](/ref/structure/Question.qmd) object. Main possibilities include making question required, setting random answer order, giving space for comments and adding a \"None\" answer. All currently available options can be found below."
aliases: 
  - ../QuestionOptions.html
categories:
  - "`velesresearch`"
  - "`velesresearch.options`"
---
# Modules

`velesresearch`

`velesresearch.options`

# Usage

``` {python}
QuestionOptions(
    required=False,
    answers_order="none",
    placeholder: = None,
    inherit_answers=None,
    inherit_answers_mode="all",
    comment=False,
    comment_text="Other",
    comment_placeholder="",
    visible=True,
    other=False,
    other_text="Other",
    other_placeholder="",
    none=False,
    none_text="None",
    clear_button=False,
    visible_if=None,
    editable_if=None,
    requied_if=None,
    hide_number=False
)
```


# Arguments

::: arg_name
required
:::
::: arg_desc
`bool`; make answer mandatory. Defaults to `False`.
:::

::: arg_name
answers_order
:::
::: arg_desc
`str`; in what order should the answers be displayed. Possible values are `"none"` (default; doesn't change the order), `"random"`, `"asc"` (ascending), `"desc"` (descending).
:::

::: arg_name
placeholder
:::
::: arg_desc
`str`; placeholder in the answer textbox. Works for textual types of questions only.
:::

::: arg_name
inherit_answers
:::
::: arg_desc
`str`; if specified, the question inherits answers from another question. Can be set to inherit selected answers only (see `inherit_answers_mode` argument). Accepts question name.
:::

::: arg_name
inherit_answers_mode
:::
::: arg_desc
`str`; changes mode of answers' inheritance. Works only if `inherit_answers=True`. Possible values are `"all"` (inherits all answers), `"selected"` (inherits only selected answers) and `"unselected"` (inherits only unselected answers).
:::

::: arg_name
comment
:::
::: arg_desc
`bool`; if `True`, a textbox for a comment appears under the question.
:::

::: arg_name
comment_text
:::
::: arg_desc
`str`; text over the comment textbox. Works only if `comment=True`.
:::

::: arg_name
comment_placeholder
:::
::: arg_desc
`str`; placeholder in the comment textbox. Works only if `comment=True`.
:::

::: arg_name
visible
:::
::: arg_desc
`bool`; should the question be visible? Useful for testing.
:::

::: arg_name
other
:::
::: arg_desc
`bool`; add "Other" option.
:::

::: arg_name
other_text
:::
::: arg_desc
`str`; text over the other textbox. Works only if `other=True`.
:::

::: arg_name
other_placeholder
:::
::: arg_desc
`str`; placeholder in the other textbox. Works only if `other=True`.
:::

::: arg_name
none
:::
::: arg_desc
`bool`; add "None" option.
:::

::: arg_name
none_text
:::
::: arg_desc
`str`; text for the "None" option. Works only if `none=True`.
:::

::: arg_name
clear_button
:::
::: arg_desc
`bool`; should a clear button be visible?
:::

::: arg_name
visible_if
:::
::: arg_desc
`str`; a condition for the question to be visible. Accepts a string with a condition in SurveyJS syntax. Accepts a string with other questions' names in curly brackets and logical statements about them. You can also join multiple statements with `and` and `or`. Available statements are:
- `empty` - question is empty (e.g. `{q1} empty`).
- `notempty` - question is not empty (e.g. `{q1} notempty`).
- `=` - question is equal to a value (e.g. `{q1} = 1`).
- `<>` – question is not equal to a value (e.g. `{q1} <> 1`).
- `contains` – question contains a value (e.g. `{q1} contains 'yes'`).
- `notcontains` – question doesn't contain a value (e.g. `{q1} notcontains 'yes'`).
- `>` – question is greater than a value (e.g. `{q1} > 1`).
- `<` – question is less than a value (e.g. `{q1} < 1`).
- `>=` – question is greater than or equal to a value (e.g. `{q1} >= 1`).
- `<=` – question is less than or equal to a value (e.g. `{q1} <= 1`).
:::

::: arg_name
editable_if
:::
::: arg_desc
`str`; a condition for the question to be editable. Accepts a string with a condition in SurveyJS syntax. Accepts a string with other questions' names in curly brackets and logical statements about them. You can also join multiple statements with `and` and `or`. Available statements are:
- `empty` - question is empty (e.g. `{q1} empty`).
- `notempty` - question is not empty (e.g. `{q1} notempty`).
- `=` - question is equal to a value (e.g. `{q1} = 1`).
- `<>` – question is not equal to a value (e.g. `{q1} <> 1`).
- `contains` – question contains a value (e.g. `{q1} contains 'yes'`).
- `notcontains` – question doesn't contain a value (e.g. `{q1} notcontains 'yes'`).
- `>` – question is greater than a value (e.g. `{q1} > 1`).
- `<` – question is less than a value (e.g. `{q1} < 1`).
- `>=` – question is greater than or equal to a value (e.g. `{q1} >= 1`).
- `<=` – question is less than or equal to a value (e.g. `{q1} <= 1`).
:::

::: arg_name
requied_if
:::
::: arg_desc
`str`; a condition for the question to be requied. Accepts a string with a condition in SurveyJS syntax. Accepts a string with other questions' names in curly brackets and logical statements about them. You can also join multiple statements with `and` and `or`. Available statements are:
- `empty` - question is empty (e.g. `{q1} empty`).
- `notempty` - question is not empty (e.g. `{q1} notempty`).
- `=` - question is equal to a value (e.g. `{q1} = 1`).
- `<>` – question is not equal to a value (e.g. `{q1} <> 1`).
- `contains` – question contains a value (e.g. `{q1} contains 'yes'`).
- `notcontains` – question doesn't contain a value (e.g. `{q1} notcontains 'yes'`).
- `>` – question is greater than a value (e.g. `{q1} > 1`).
- `<` – question is less than a value (e.g. `{q1} < 1`).
- `>=` – question is greater than or equal to a value (e.g. `{q1} >= 1`).
- `<=` – question is less than or equal to a value (e.g. `{q1} <= 1`).
:::

# Value

An object of class `QuestionOptions`.

# Examples

``` {python}
# | eval: true
# | output: false
from velesresearch import radio, QuestionOptions

radio(
    "favourite_drink",
    "What's your favourite drink?",
    "Tea",
    "Coffee",
    "Water",
    options=QuestionOptions(other=True, none=True, required=True),
)
```