---
title: "`question`"
subtitle: "Create `Question` object"
description: "A handy wrapper around [`Question()`](../structure/Question). Creates a `Question` object. Most basic function in Veles. Can be used either to create a single `Question` object or to convert a whole questionnaire at once."
aliases: 
  - ../question.html
categories:
  - "`velesresearch`"
  - "`velesresearch.tools`"
---
# Modules

`velesresearch`

`velesresearch.tools`

# Usage

``` {python}
question(label, question_text, *answers, question_type, description=None, options=None)
```


# Arguments

::: arg_name
label
:::
::: arg_desc
`str`; internal name of the question. Will become column name in the database.
:::

::: arg_name
question_text
:::
::: arg_desc
`str` or `list[str]`; the text of the question. This is what the participant actually sees. If given as a list, each entery is converted to a question.
:::

::: arg_name
\*answers
:::
::: arg_desc
`list[str]` or `str`; list of possible answers. Can be given as a `list` object or subsequent `string` objects separated by commas.
:::

::: arg_name
question_type
:::
::: arg_desc
`str`; type of the question. Default is `"radio"`. For a list of available question types see [Question types](../questiontypes.qmd).
:::

::: arg_name
options
:::
::: arg_desc
`QuestionOptions`; options object created with [`QuestionOptions()`](../options/QuestionOptions.qmd), changes behaviour of the question (e.g. random answer order or required answer).
:::

::: arg_name
description
:::
::: arg_desc
`str`; description of the question. Looks like a subtitle. Can be used to give the participant additional information, e.g. `"in years"` in an age question.
:::

# Value

The return value depends on `question_text` argument type. If it's a `str`, then the output is a single `Question` object. If it's a list of items, the output value is a list, where each input item is a separate `Question` object with the same scale and options. Labels of such list have a form of `label_number`, eg. `"MMPI_1"`, `"MMPI_2"`, ..., `"MMPI_567"`.

# See also

- [Question types](../questiontypes.qmd) for wrappers like `radio()` or `checkbox()` and available question types.

- [`QuestionOptions()`](../options/QuestionOptions) for available question modifications.

- [`page()`](./page.qmd) for composing questions into pages.

# Examples

``` {python}
# | eval: true
# | output: false
from velesresearch import question, QuestionOptions

gender = question(
    "gender",
    "What is your gender?",
    "Woman",
    "Man",
    options=QuestionOptions(
        answers_order="random",
        none=True,
        none_text="I don't want to answer",
        other=True,
        other_placeholder="Write your gender.",
    ),
    description="Choose an answer from options below.",
)
```