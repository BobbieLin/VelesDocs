---
title: Library implementation tool
description: This page can be used to generate a function's template and (in the future) a VelesDocs entry. Fill out the necessary details to implement your questionnaire. If you want, you can also specify the items themselves here.
---

<style>
    #tryAgainButton {
      background-color: #CC0000;
    }

    #tryAgainButton:hover {
      background-color: #b30000;
    }

    .lds-dual-ring {
      /* change color here */
      color: #19B394 !important;
    }

    .lds-dual-ring,
    .lds-dual-ring:after {
      box-sizing: border-box;
    }

    .lds-dual-ring {
      display: inline-block;
      width: 80px;
      height: 80px;
    }

    .lds-dual-ring:after {
      content: " ";
      display: block;
      width: 64px;
      height: 64px;
      margin: 8px;
      border-radius: 50%;
      border: 6.4px solid currentColor;
      border-color: currentColor transparent currentColor transparent;
      animation: lds-dual-ring 1.2s linear infinite;
    }

    @keyframes lds-dual-ring {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  </style>

<noscript>You need to enable JavaScript to run this app.</noscript>

<script>
function downloadPython() {
            const blob = new Blob([window.pythonCode], { type: 'text/plain' });
            const a = Object.assign(document.createElement('a'), { href: URL.createObjectURL(blob), download: `${window.abbreviation}.py` });
            a.click();
        }
function downloadQuarto() {
            const blob = new Blob([window.quartoCode], { type: 'text/plain' });
            const a = Object.assign(document.createElement('a'), { href: URL.createObjectURL(blob), download: `${window.abbreviation}.qmd` });
            a.click();
        }
</script>

<details>
<summary>View detailed contributing manual</summary>
Thank you for wanting to contribute to the VelesLibrary! Here you'll find a detailed, illustrated instruction on how to implement your questionnaires. In most cases, <b>you don't even need to know how to code</b>! Here we assume that you don't know anything about Git and GitHub. To even begin the implementation process, you need to create a [GitHub account](https://github.com/) and download and install [GitHub Desktop](https://github.com/apps/desktop) (unless you want to use Git directly).

To add some code to the VelesLibrary, you need to create your own copy of the library (so called *fork*), make and confirm some changes (*commit*), send them to GitHub (*push*) and open a request to add them to the main library (open a *Pull Request* (PR)). Here we will discuss this process in detail.

1. The library consists of two code repositories -- the code itself (VelesLibrary) and the documentation on this website (VelesDocs). The first thing we will do is to fork both repositories. Go to the [VelesLibrary GitHub page](https://github.com/jakub-jedrusiak/VelesLibrary) and click the Fork button (see the figure). Then accept it as is. After you fork VelesLibrary, do the same with [VelesDocs](https://github.com/jakub-jedrusiak/VelesDocs).
  ![The Fork button](figs/libtool/fork.png)
2. Then we need to download (or *clone*) both our new forks. Open the GitHub Desktop app, login, go to File → Clone repository…, search for VelesLibrary, confirm and select a folder you want do save the library in. Do the same with VelesDocs.
  ![Cloning the repository](figs/libtool/clone.png)
3. Now you can create your code. Fill out the form on this page with all the necessary informations and click Generate. Mind the citations! You must use [ZBib](https://zbib.org/) to create your citations. When you do that, be sure to set APA 7 citation style and actually copy the HTML. See the figure.
  ![HTML in ZBib](figs/libtool/zbib.png)
4. When you generate the files, be sure to unfold appropriate sections and check if everything looks OK in the documentation. Especially look at the reliability coefficients.
5. Now you can download the files. The first file (with the .py extension) is the code itself. It needs to go to the VelesLibrary folder. See the text to select an appropriate subfolder. It will most probably be the `veleslibrary/questionnaires` subfolder. If your test is in English, it will go to the folder directly. If it's in a different language, it will go so an appropriate subfolder. Just put your file there.
6. Now you need to edit the `__init__.py` file. Open it in any text editor and at the end of the file, add an appropriate import closure. Don't worry, the generated instructions will tell you how your closure should look like. Copy and paste the line to the file.
  ![Editing the `__init__.py`](figs/libtool/init.png)
7. Now download the documentation file (.qmd extension). Put it in your VelesDocs folder, in the library subfolder. Look for an appropriate language code.
8. Now we're ready to commit the changes in both repositories. Open the VelesLibrary repo in GitHub Desktop. On the left, you'll see both changed files. Mark them, add a commit message (e.g. "Add RSES in Polish") and commit the changes. Click the appropriate button to push the changes. See the figure. Do the same with VelesDocs.
  ![Commiting and pushing to GitHub](figs/libtool/commit.png)
9. Now we need to open Pull Requests on both repos. Start with VelesLibrary. There should be an appropriate button in GitHub Desktop, but you can also go to your fork's GitHub page and you will see a big, bright button urging you to open a Pull Request. Click it and fill out the form. Do the same with VelesDocs.
10. Done. A maintainer should review your changes, correct the mistakes (if any) and merge your Pull Request. After that, your contribution will serve any scientist who would want to use the questionnaire.
</details>

<div id="root">
<div style="text-align: center; padding-bottom: 2em; padding-top: 2em;">
<div class="lds-dual-ring"></div>
</div>
</div>
<div id="tryAgainDiv" style="text-align: center; padding-bottom: 2em; display: none;"><button id="tryAgainButton"
disabled class="sd-btn sd-btn--action">Try
again</button></div>

<script type="module" src="../libtool/main.js"></script>